// @flow

var babel = require('babel-core')
var fs = require('fs')
var path = require('path')

if (process.argv.length !== 5) {
  console.log('USAGE: flow-type-assert <types.js> <output.js> <output.js.flow>')
  process.exit(1)
}

const inputFile = process.argv[2]
const outputFile = process.argv[3]
const outputTypesFile = process.argv[4]

const autogenWarning =
  '// ----------------------------------------------\n//\n' +
  '// AUTOGENERATED FILE, DO NOT EDIT\n//\n' +
  '// ----------------------------------------------\n\n'

var typesFile = fs.readFileSync(inputFile)

const { code } = babel.transform(typesFile, {
  plugins: [ 'flow-runtime', 'transform-flow-strip-types' ]
})

fs.writeFileSync(outputFile, autogenWarning + code)

// generate a flow type definition file
fs.writeFileSync(outputTypesFile,
  '// @flow\n\n' +
  autogenWarning +
  '\nmodule.exports={\n  ' +
  (typesFile/*:any*/).toString()
    .match(/export type[^=]*/g)
    .map(exportType => exportType.split('export type')[1].trim())
    .map(typeName => `${typeName}: { assert: (a: any) => null }`)
    .join(',\n  ') +
  '\n}'
)
